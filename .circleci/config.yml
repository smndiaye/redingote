# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.1-node-browsers
       - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.1
         environment:
           http.host: '127.0.0.1'
           http.port: 9200
           xpack.security.enabled: false
           ES_JAVA_OPTS: '-Xms256m -Xmx256m'

      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
#       - image: library/mysql:5.6
#         env:
#           - MYSQL_ALLOW_EMPTY_PASSWORD=true
#           - MYSQL_ROOT_HOST=%

    working_directory: ~/redingote

    steps:
      - type: shell
        name: Test ElasticSearch
        command: |
          wget - waitretry = 10 --retry - connrefused --http-user = elastic --http-passwd = changeme -v http://127.0.0.1:9200/ -O / dev / null

#      - checkout
#
#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "Gemfile.lock" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#
#      - run:
#          name: install dependencies
#          command: |
#            bundle install --jobs=4 --retry=3 --path vendor/bundle
#
#      - save_cache:
#          paths:
#            - ./vendor/bundle
#          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
#
#      # Database setup
#      - run: bundle exec rake db:create
#      - run: bundle exec rake db:schema:load
#
#       run tests!
#      - run:
#          name: rspec
#          command: |
#            mkdir /tmp/test-results
#            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
#
#            bundle exec rspec --format progress \
#                            --format RspecJunitFormatter \
#                            --out /tmp/test-results/rspec.xml \
#                            --format progress \
#                            "${TEST_FILES}"
#
#      # collect reports
#      - store_test_results:
#          path: /tmp/test-results
#      - store_artifacts:
#          path: /tmp/test-results
#          destination: test-results